spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
spring.datasource.url=jdbc:mariadb://localhost:3307/bootex
spring.datasource.username=bootuser
spring.datasource.password=1234

# DDL(create, alter, drop) 등을 생성하는 방법 결정
spring.jpa.hibernate.ddl-auto=update

# JPA의 구현체인 Hibernate가 동작하면서 발생하는 SQL을 포맷팅해서 출력
spring.jpa.properties.hibernate.format_sql=true

# 처리 시에 발생하는 SQL을 보여줄 것인지 결정
spring.jpa.show-sql=true

# thymeleaf로 화면 처리
spring.thymeleaf.cache=false

# 파일 업로드 처리 - 파일 업로드 기능 여부 선택
spring.servlet.multipart.enabled=true

# 파일 업로드 처리 - 업로드된 파일의 임시 저장 경로
spring.servlet.multipart.location=C:\\upload

# 파일 업로드 처리 - 한 번에 최대 업로드 가능 용량
spring.servlet.multipart.max-request-size=30MB

# 파일 업로드 처리 - 파일 하나의 최대 크기
spring.servlet.multipart.max-file-size=10MB

logging.level.org.springframework.security.web= debug
logging.level.org.zerock.security = debug

# OAuth 2.0
spring.security.oauth2.client.registration.google.client-id=432096498169-h8ps1n9ak2prs7o95ctp2dria346nea8.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=VbThPs6X6CshTxRKDFlEASrZ
spring.security.oauth2.client.registration.google.scope=email

# 추가된 파일을 포함해서 동작하도록 설정을 추가
spring.profiles.include=oauth